#!/bin/bash
do_run=1 # Execute(evaluate) the commands
#do_run=0 # Don't evaluate any commands
#
MY_DIR=$(dirname $(readlink -f $0))
. $MY_DIR/common.sh
#echo $?
if [ $? -eq 1 ]; then
  echo ""
  echo "Copy the $MY_DIR/common.sh.template file to $MY_DIR/common.sh and adjust before continuing."
  echo ""
  cmd='cp '$MY_DIR/common.sh.template' '$MY_DIR/common.sh
  echo $cmd
  echo ""
  cmd='vi '$MY_DIR/common.sh
  echo $cmd
  echo ""
  exit
fi
echo ""
echo "Including common.sh from "$MY_DIR
echo ""
echo "host:$host port:$port tenant:$tenant org:$org xsa_user:$xsa_user sys_user:$sys_user hdb_user:$hdb_user"
xsorcf=$1
client=$2
version=$3
space=$4
role=$5
touser=$6
echo "xsorcf:$xsorcf client:$client space:$space role:$role touser:$touser"
echo ""
#exit
dowait=""
doexport1=""
doexport2=""
if [ "$#" -eq 6 ]; then
  if [ $xsorcf = "xs" ]; then
    dowait=" --wait-indefinitely"
    doexport1=" --export-json /dev/stdout 2>/dev/null | tail -n +5"
    echo "XS cool."
  else
    if [ $xsorcf = "cf" ]; then
      doexport1=" | tail -n +5 | head -n -8"
      doexport2=" | head -n -1"
      echo "CF cool."
    else
      echo "Not XS or CF, try again."
      exit 1
    fi
  fi

  client_uc=$(echo "$client" | tr a-z A-Z)
  client_lc=$(echo "$client" | tr A-Z a-z)

  version_uc=$(echo "$version" | tr a-z A-Z)
  version_lc=$(echo "$version" | tr A-Z a-z)

  echo 'Granting Role '$role' to '$touser' for container '$client_uc'_'$version_us' in Org: '$org' Space: '$space' Starting...'
  echo ""
  if [ $do_run -eq 1 ]; then echo "Do Run!"; else echo "Dry Run!"; fi
  echo ""

  cmd=$xsorcf' target -o '$org' -s '$space
  echo $cmd
  eval $cmd

  #exit 1

  echo ""

  cmd='HDI_SCHEMA=$('$xsorcf' env '$client_lc'_db_'$version_lc' '$doexport1' | jq -r '"'"'.VCAP_SERVICES.hana[0].credentials.schema'"'"$doexport2')'
  #echo $cmd
  if [ $do_run -eq 1 ]; then eval $cmd; fi
  echo 'export HDI_SCHEMA='$HDI_SCHEMA

  cmd='HDI_USER=$('$xsorcf' env '$client_lc'_db_'$version_lc' '$doexport1' | jq -r '"'"'.VCAP_SERVICES.hana[0].credentials.user'"'"$doexport2')'
  #echo $cmd
  if [ $do_run -eq 1 ]; then eval $cmd; fi
  echo 'export HDI_USER='$HDI_USER

  cmd='HDI_PASS=$('$xsorcf' env '$client_lc'_db_'$version_lc' '$doexport1' | jq -r '"'"'.VCAP_SERVICES.hana[0].credentials.password'"'"$doexport2')'
  #echo $cmd
  if [ $do_run -eq 1 ]; then eval $cmd; fi
  echo 'export HDI_PASS='$HDI_PASS

  #exit 1

#CALL "db_grant_role"(
#	IN_USER => 'BIBO_USER',
#	IN_ROLE => 'dt_poc_admin',
#	EX_MESSAGE => ?
#);

  ccmd="CALL "
  ccmd=$ccmd'"db_grant_role"'
  ccmd=$ccmd"(IN_USER => "
  ccmd="$ccmd'$touser'"
  ccmd=$ccmd", IN_ROLE => "
  ccmd="$ccmd'$role'"
  ccmd=$ccmd", EX_MESSAGE => ?)"

  #echo $ccmd

  printf '%s;\n%s;\n' "SET SCHEMA $HDI_SCHEMA" "$ccmd" > /tmp/sqlcmds

  #echo ""
  #cat /tmp/sqlcmds
  #echo ""

#  cmd='hdbsql -i '$inst' -n '$host':'$port' -d '$tenant' -u '$HDI_USER' -p '$HDI_PASS' '"'"'CALL "'$HDI_SCHEMA'"."db_grant_role"(IN_USER => '"'"'"'"'"'"'"'"''$touser''"'"'"'"'"'"'"'"',IN_ROLE => '"'"'"'"'"'"'"'"''$role''"'"'"'"'"'"'"'"',EX_MESSAGE => ?)'"'"''
  cmd='hdbsql -i '$inst' -n '$host':'$port' -d '$tenant' -u '$HDI_USER' -p '$HDI_PASS' -I /tmp/sqlcmds'
  echo $cmd
  if [ $do_run -eq 1 ]; then eval $cmd; fi
  
else
    echo "Usage ./grant_role xs[cf] client version tospace role touser"
    exit 1
fi
echo ""
echo "Grand Role "$role" to "$touser" on container with service binding "$client_uc"_"$version_uc" currently bound to "$client_lc"_db_"$version_lc" Finished"
echo ""
